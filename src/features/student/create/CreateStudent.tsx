import Head from "next/head";
import createStudentStyles from "./createStudent.module.css";
import Input from "../../../components/UI/TextInput/TextInput";
import { useState } from "react";
import Address from "../../../components/Common/Address";
import { Calendar } from "react-date-range";
import { Badges } from "../../../components/UI/Badges/Badges";
import Dropdown from "../../../components/UI/Dropdown";
import Button from "../../../components/UI/Button/Button";
import { MessageBanner } from "../../../components/MessageBanner/MessageBanner";
import Accordion from "../../../components/UI/Accordion";
import { updateStudentAddress } from "../StudentSlice";
import { useSelector } from "react-redux";
import { AppState } from "../../../store";
import AddParent from "../../parent/addParent";

export default function CreateStudent() {
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [dateOfBirth, setDOB] = useState(new Date("2000/01/01"));
  const [selectedLanguage, setSelectedLanguage] = useState("");
  const [standard, setStandard] = useState({ label: "Select Class", value: '' });
  const [apiResultStatus, setAPIResultStatus] = useState({
    message: "",
    status: "",
    title: "",
  });
  const [enableAddParent, setEnableAddParent] = useState(false);

  const languageSelection = ({ isSelected, item }) => {
    // item
    setSelectedLanguage(item);
  };

  const closeBanner = () => {
    setAPIResultStatus({ message: "", status: "success", title: "" });
  };
  const { address } = useSelector((state: AppState) => state.student);

  return (
    <div>
      <Head>
        <title>Add New Student</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="parent__detail">
        <Accordion>
          <Accordion.Content title="Add Parent" open={true}>
            <div>
              {enableAddParent ?  <AddParent />
               : (
                <i
                  onClick={() => setEnableAddParent(true)}
                  className={`${createStudentStyles.add__parent} uil-plus`}
                />
              )}
            </div>
          </Accordion.Content>
          <Accordion.Content title="Add Student">
            {/* <h1 className={styles.headding}>Add Student</h1> */}
            <div className={createStudentStyles.form__container}>
              <div className={createStudentStyles.cover__image}>
                <img src="/assets/images/student.jpg" />
              </div>
              <div className={createStudentStyles.basic__details}>
                <h3>Basic Details</h3>
                {/* <Dropdown options={[{value:'KA', label: 'Karnataka'}, {value:'KL', label: 'Kerala'}, {value:'GA', label: 'Goa'}]} selected={state} onChange={(value) => setState(value)} /> */}
                <Dropdown
                  options={[
                    { value: "LKG", label: "LKG" },
                    { value: "UKG", label: "UKG" },
                    { value: "I", label: "I" },
                    { value: "II", label: "II" },
                    { value: "III", label: "III" },
                    { value: "IV", label: "IV" },
                    { value: "V", label: "V" },
                    { value: "VI", label: "VI" },
                    { value: "VII", label: "VII" },
                    { value: "VIII", label: "VIII" },
                    { value: "IX", label: "IX" },
                    { value: "X", label: "X" },
                  ]}
                  selected={standard}
                  onChange={(value) => setStandard(value)}
                />
                <div>
                  <Input
                    placeholder="First Name"
                    name="firstName"
                    onChange={(e) => setFirstName(e.target.value)}
                    value={firstName}
                  />
                </div>
                <div>
                  <Input
                    placeholder="Last Name"
                    name="firstName"
                    onChange={(e) => setLastName(e.target.value)}
                    value={lastName}
                  />
                </div>
                <Address
                  {...address}
                  setAddressValue={(key, value) => {
                    updateStudentAddress({ key, value });
                  }}
                />
              </div>

              <div>
                <h5>Date of birth</h5>
                <Calendar
                  className={createStudentStyles.date__of__birth}
                  date={dateOfBirth}
                  onChange={setDOB}
                />
              </div>
              <div className={createStudentStyles.motherTongue}>
                <h5>Mother tongue</h5>
                <Badges
                  lists={[
                    "English",
                    "Kannada",
                    "Tamil",
                    "Telugu",
                    "Hindi",
                    "Marati",
                    "Tulu",
                    "Coorgi",
                    "Konkani",
                    "Urdu",
                    "Malayalam",
                  ]}
                  selected={selectedLanguage}
                  onSelect={languageSelection}
                />
              </div>
              <div className={createStudentStyles.save__button}>
                {/* <h5>Education History</h5> */}
                <Button onClick={() => {}} label="Save" />
              </div>
            </div>
          </Accordion.Content>
        </Accordion>
      </div>
      {apiResultStatus.status && (
        <MessageBanner
          onCloseBanner={closeBanner}
          title={apiResultStatus.title}
          type={'success'}
          message={apiResultStatus.message}
        />
      )}
    </div>
  );
}
